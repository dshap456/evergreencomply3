import { UseQueryOptions } from '@tanstack/react-query';
import { DataLoader } from '@makerkit/data-loader-supabase-core';
import { SupabaseClient } from '@supabase/supabase-js';
/**
 * @name useSupabaseQuery
 * @description Fetches table data from a data provider and returns the retrieved data,
 * count, error status, and loading status.
 */
export declare function useSupabaseQuery<Client extends SupabaseClient<DataLoader.GenericDatabase>, TableName extends keyof DataLoader.Tables<DataLoader.ExtractDatabase<Client>>, Selection extends DataLoader.Query<DataLoader.ExtractDatabase<Client>, TableName> = DataLoader.StarOperator, Single extends boolean = false, CamelCase extends boolean = false>(props: DataLoader.DataLoaderProps<Client, TableName, Selection, Single, CamelCase> & {
    config?: Omit<UseQueryOptions<{
        data: DataLoader.TransformData<DataLoader.Data<DataLoader.ExtractDatabase<Client>, TableName, Selection>, CamelCase, Single>;
        count: number;
        error: Error | null;
    }, Error, {
        data: DataLoader.TransformData<DataLoader.Data<DataLoader.ExtractDatabase<Client>, TableName, Selection>, CamelCase, Single>;
        count: number;
        error: Error | null;
    }>, 'queryFn' | 'queryKey'>;
}): {
    data: DataLoader.TransformData<DataLoader.Data<DataLoader.ExtractDatabase<Client>, TableName, Selection>, CamelCase, Single>;
    count: number;
    error: Error | null;
    isLoading: boolean;
};
