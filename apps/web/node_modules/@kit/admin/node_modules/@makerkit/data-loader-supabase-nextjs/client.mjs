import { useQuery as l } from "@tanstack/react-query";
import { fetchDataFromSupabase as g } from "@makerkit/data-loader-supabase-core";
import { useCallback as m } from "react";
import { useRouter as s } from "next/navigation";
function f(e) {
  const a = [
    e.table,
    e.select ?? "*",
    e.where,
    e.count,
    e.limit,
    e.page,
    e.single,
    e.sort
  ].filter(Boolean), { data: t, error: n, isLoading: o } = l({
    ...e.config ?? {},
    queryKey: a,
    queryFn: () => g(e)
  });
  return t ? {
    data: t.data,
    count: t.count,
    error: n,
    isLoading: o
  } : {
    data: e.single ? void 0 : [],
    count: 0,
    error: n,
    isLoading: o
  };
}
const i = 10;
function b(e) {
  const { data: a, count: t, error: n, isLoading: o } = f(e), r = d(), u = e.limit ?? i, c = Math.ceil(t / (e.limit ?? i));
  return e.children({
    result: {
      data: a,
      count: t,
      pageCount: c,
      page: e.page ?? 1,
      pageSize: u
    },
    error: n,
    isLoading: o,
    onPageChange: r
  });
}
function d() {
  const e = s();
  return m(
    (a) => {
      const t = new URL(window.location.href);
      t.searchParams.set("page", String(a)), e.push(t.pathname);
    },
    [e]
  );
}
export {
  b as ClientDataLoader,
  f as useSupabaseQuery
};
